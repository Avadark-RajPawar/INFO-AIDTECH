# -*- coding: utf-8 -*-
"""MovieRecomendationSystem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JdIZ2BpbhGnsvdkCWh6hrdyU1A8qGose
"""

import pandas as pd
import re
import numpy as np

df = pd.read_csv("/content/movies.csv")
df.head()

def clean_title(title):
  return re.sub('[^a-zA-Z0-9 ]', "", title)

df['clean_title'] = df['title'].apply(clean_title)
df.head()

from sklearn.feature_extraction.text import TfidfVectorizer

vectorizer = TfidfVectorizer(ngram_range=(1,2))
tfidf = vectorizer.fit_transform(df['clean_title'])

from numpy.lib.function_base import vectorize
from sklearn.metrics.pairwise import cosine_similarity\

def search(title):
  title = "Toy Story 1995"
  title = clean_title(title)
  input = vectorizer.transform([title])
  similar = cosine_similarity(input, tfidf).flatten()
  indices = np.argpartition(similar, -5)[-5:]
  output = df.iloc[indices][::-1]
  return output

import ipywidgets as widget
from IPython.display import display

input_box = widget.Text(
    value="Enter a Movie",
    description="Movie Title: "
)

recomendations = widget.Output()

def on_change(data):
  with recomendations:
    recomendations.clear_output()
    title = data['new']
    if len(title) < 6:
      display(search(title))

input_box.observe(on_change, names='value')

display(input_box, recomendations)

